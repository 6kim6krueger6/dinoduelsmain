export const RPSaddress = "0xE269c03024fAFCF85F00d220602400Ab3DEf16cc";

export const RPSabi = [{ "inputs": [{ "internalType": "address", "name": "_nftContract", "type": "address" }], "name": "", "outputs": null, "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [], "name": "CantBeNone", "outputs": null, "stateMutability": "", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "ERC721NonexistentToken", "outputs": null, "stateMutability": "", "type": "error" }, { "inputs": [], "name": "GameIsFull", "outputs": null, "stateMutability": "", "type": "error" }, { "inputs": [], "name": "GameIsNotCalculating", "outputs": null, "stateMutability": "", "type": "error" }, { "inputs": [], "name": "GameIsNotOpen", "outputs": null, "stateMutability": "", "type": "error" }, { "inputs": [], "name": "NotApprovedForNFT1", "outputs": null, "stateMutability": "", "type": "error" }, { "inputs": [], "name": "NotApprovedForNFT2", "outputs": null, "stateMutability": "", "type": "error" }, { "inputs": [{ "indexed": false, "internalType": "uint256", "name": "gameId", "type": "uint256" }, { "indexed": false, "internalType": "address", "name": "player1", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "tokenId1", "type": "uint256" }], "name": "GameCreated", "outputs": null, "stateMutability": "", "type": "event" }, { "inputs": [{ "indexed": false, "internalType": "address", "name": "player", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "gameID", "type": "uint256" }, { "indexed": false, "internalType": "bool", "name": "isWinner", "type": "bool" }], "name": "GameResult", "outputs": null, "stateMutability": "", "type": "event" }, { "inputs": [{ "indexed": false, "internalType": "uint256", "name": "gameId", "type": "uint256" }, { "indexed": false, "internalType": "address", "name": "player2", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "tokenId2", "type": "uint256" }], "name": "PlayerJoined", "outputs": null, "stateMutability": "", "type": "event" }, { "inputs": [{ "internalType": "uint256", "name": "gameId", "type": "uint256" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "enum RPSgame.Choice", "name": "_choice", "type": "uint8" }], "name": "joinGame", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "s_gameId", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "s_gameState", "outputs": [{ "internalType": "enum RPSgame.GameState", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "gameId", "type": "uint256" }], "name": "s_games", "outputs": [{ "internalType": "enum RPSgame.GameState", "name": "gameState", "type": "uint8" }, { "internalType": "uint256", "name": "tokenId1", "type": "uint256" }, { "internalType": "uint256", "name": "tokenId2", "type": "uint256" }, { "internalType": "address", "name": "player1", "type": "address" }, { "internalType": "address", "name": "player2", "type": "address" }, { "internalType": "enum RPSgame.Choice", "name": "player1choice", "type": "uint8" }, { "internalType": "enum RPSgame.Choice", "name": "player2choice", "type": "uint8" }, { "internalType": "bool", "name": "fulfilled", "type": "bool" }, { "internalType": "bool", "name": "isWinner1", "type": "bool" }, { "internalType": "bool", "name": "isWinner2", "type": "bool" }, { "internalType": "bool", "name": "isDraw", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "s_nftContract", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }, { "internalType": "enum RPSgame.Choice", "name": "_choice", "type": "uint8" }], "name": "startGame", "outputs": [], "stateMutability": "nonpayable", "type": "function" }]