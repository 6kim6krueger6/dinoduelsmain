"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[162],{7162:(e,t,r)=>{function n(e){const t=new Uint8Array(e);let r="";for(const n of t)r+=String.fromCharCode(n);return btoa(r).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function o(e){const t=e.replace(/-/g,"+").replace(/_/g,"/"),r=(4-t.length%4)%4,n=t.padEnd(t.length+r,"="),o=atob(n),a=new ArrayBuffer(o.length),i=new Uint8Array(a);for(let s=0;s<o.length;s++)i[s]=o.charCodeAt(s);return a}function a(){return void 0!==window?.PublicKeyCredential&&"function"===typeof window.PublicKeyCredential}function i(e){const{id:t}=e;return{...e,id:o(t),transports:e.transports}}function s(e){return"localhost"===e||/^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(e)}r.r(t),r.d(t,{WebAuthnAbortService:()=>l,WebAuthnError:()=>c,base64URLStringToBuffer:()=>o,browserSupportsWebAuthn:()=>a,browserSupportsWebAuthnAutofill:()=>R,bufferToBase64URLString:()=>n,platformAuthenticatorIsAvailable:()=>f,startAuthentication:()=>p,startRegistration:()=>h});class c extends Error{constructor(e){let{message:t,code:r,cause:n,name:o}=e;super(t,{cause:n}),this.name=o??n.name,this.code=r}}const l=new class{createNewAbortSignal(){if(this.controller){const e=new Error("Cancelling existing WebAuthn API call for new one");e.name="AbortError",this.controller.abort(e)}const e=new AbortController;return this.controller=e,e.signal}cancelCeremony(){if(this.controller){const e=new Error("Manually cancelling existing WebAuthn API call");e.name="AbortError",this.controller.abort(e),this.controller=void 0}}},u=["cross-platform","platform"];function d(e){if(e&&!(u.indexOf(e)<0))return e}async function h(e){if(!a())throw new Error("WebAuthn is not supported in this browser");var t;const r={publicKey:{...e,challenge:o(e.challenge),user:{...e.user,id:(t=e.user.id,(new TextEncoder).encode(t))},excludeCredentials:e.excludeCredentials?.map(i)}};let u;r.signal=l.createNewAbortSignal();try{u=await navigator.credentials.create(r)}catch(m){throw function(e){let{error:t,options:r}=e;const{publicKey:n}=r;if(!n)throw Error("options was missing required publicKey property");if("AbortError"===t.name){if(r.signal instanceof AbortSignal)return new c({message:"Registration ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:t})}else if("ConstraintError"===t.name){if(!0===n.authenticatorSelection?.requireResidentKey)return new c({message:"Discoverable credentials were required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT",cause:t});if("required"===n.authenticatorSelection?.userVerification)return new c({message:"User verification was required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT",cause:t})}else{if("InvalidStateError"===t.name)return new c({message:"The authenticator was previously registered",code:"ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED",cause:t});if("NotAllowedError"===t.name)return new c({message:t.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:t});if("NotSupportedError"===t.name)return 0===n.pubKeyCredParams.filter((e=>"public-key"===e.type)).length?new c({message:'No entry in pubKeyCredParams was of type "public-key"',code:"ERROR_MALFORMED_PUBKEYCREDPARAMS",cause:t}):new c({message:"No available authenticator supported any of the specified pubKeyCredParams algorithms",code:"ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG",cause:t});if("SecurityError"===t.name){const e=window.location.hostname;if(!s(e))return new c({message:`${window.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:t});if(n.rp.id!==e)return new c({message:`The RP ID "${n.rp.id}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:t})}else if("TypeError"===t.name){if(n.user.id.byteLength<1||n.user.id.byteLength>64)return new c({message:"User ID was not between 1 and 64 characters",code:"ERROR_INVALID_USER_ID_LENGTH",cause:t})}else if("UnknownError"===t.name)return new c({message:"The authenticator was unable to process the specified options, or could not create a new credential",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:t})}return t}({error:m,options:r})}if(!u)throw new Error("Registration was not completed");const{id:h,rawId:R,response:p,type:f}=u;let E,g,A,b;if("function"===typeof p.getTransports&&(E=p.getTransports()),"function"===typeof p.getPublicKeyAlgorithm)try{g=p.getPublicKeyAlgorithm()}catch(y){w("getPublicKeyAlgorithm()",y)}if("function"===typeof p.getPublicKey)try{const e=p.getPublicKey();null!==e&&(A=n(e))}catch(y){w("getPublicKey()",y)}if("function"===typeof p.getAuthenticatorData)try{b=n(p.getAuthenticatorData())}catch(y){w("getAuthenticatorData()",y)}return{id:h,rawId:n(R),response:{attestationObject:n(p.attestationObject),clientDataJSON:n(p.clientDataJSON),transports:E,publicKeyAlgorithm:g,publicKey:A,authenticatorData:b},type:f,clientExtensionResults:u.getClientExtensionResults(),authenticatorAttachment:d(u.authenticatorAttachment)}}function w(e,t){console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${e}. You should report this error to them.\n`,t)}function R(){const e=window.PublicKeyCredential;return void 0===e.isConditionalMediationAvailable?new Promise((e=>e(!1))):e.isConditionalMediationAvailable()}async function p(e){let t,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!a())throw new Error("WebAuthn is not supported in this browser");0!==e.allowCredentials?.length&&(t=e.allowCredentials?.map(i));const u={...e,challenge:o(e.challenge),allowCredentials:t},h={};if(r){if(!await R())throw Error("Browser does not support WebAuthn autofill");if(document.querySelectorAll("input[autocomplete$='webauthn']").length<1)throw Error('No <input> with "webauthn" as the only or last value in its `autocomplete` attribute was detected');h.mediation="conditional",u.allowCredentials=[]}let w;h.publicKey=u,h.signal=l.createNewAbortSignal();try{w=await navigator.credentials.get(h)}catch(m){throw function(e){let{error:t,options:r}=e;const{publicKey:n}=r;if(!n)throw Error("options was missing required publicKey property");if("AbortError"===t.name){if(r.signal instanceof AbortSignal)return new c({message:"Authentication ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:t})}else{if("NotAllowedError"===t.name)return new c({message:t.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:t});if("SecurityError"===t.name){const e=window.location.hostname;if(!s(e))return new c({message:`${window.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:t});if(n.rpId!==e)return new c({message:`The RP ID "${n.rpId}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:t})}else if("UnknownError"===t.name)return new c({message:"The authenticator was unable to process the specified options, or could not create a new assertion signature",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:t})}return t}({error:m,options:h})}if(!w)throw new Error("Authentication was not completed");const{id:p,rawId:f,response:E,type:g}=w;let A;var b;return E.userHandle&&(b=E.userHandle,A=new TextDecoder("utf-8").decode(b)),{id:p,rawId:n(f),response:{authenticatorData:n(E.authenticatorData),clientDataJSON:n(E.clientDataJSON),signature:n(E.signature),userHandle:A},type:g,clientExtensionResults:w.getClientExtensionResults(),authenticatorAttachment:d(w.authenticatorAttachment)}}function f(){return a()?PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable():new Promise((e=>e(!1)))}}}]);
//# sourceMappingURL=162.4d44cfea.chunk.js.map